// Generated by :tools:generateApis. Do not edit manually.
package dev.jellystack.network.generated.radarr

import io.ktor.client.HttpClient
import io.ktor.client.call.body
import io.ktor.client.request.request
import io.ktor.client.request.header
import io.ktor.http.HttpMethod
import io.ktor.http.path
import io.ktor.http.takeFrom
import kotlinx.serialization.Serializable

/** Subset of Radarr system status useful for diagnostics. */
@Serializable
data class SystemStatusResponse(
    val appName: String,
    val version: String,
    val releaseBranch: String? = null,
)

/** System status client for Radarr onboarding connectivity checks. */
class RadarrSystemApi(
    private val client: HttpClient,
    private val baseUrl: String,
    private val apiKey: String?,
) {
    private fun io.ktor.client.request.HttpRequestBuilder.configureUrl(pathSuffix: String) {
        url {
            takeFrom(baseUrl)
            path(pathSuffix.trimStart('/'))
        }
    }

    private fun io.ktor.client.request.HttpRequestBuilder.applyAuth() {
        if (!apiKey.isNullOrBlank()) {
            header("X-Api-Key", apiKey)
        }
    }

    /** Retrieve system status meta data to verify connectivity and auth. */
    suspend fun fetchSystemStatus(): SystemStatusResponse =
        client.request {
            method = HttpMethod.Get
            configureUrl("/api/v3/system/status")
            applyAuth()
        }.body<SystemStatusResponse>()

}
